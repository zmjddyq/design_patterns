@startuml
Interface PC {
    void writeCode()
}

class MiPC implements PC {
    void writeCode()
}

class MAC implements PC {
    void writeCode()
}

Interface Phone {
    void call()
}
class MiPhone implements Phone {
    void call()
}
class IPhone implements Phone {
    void call()
}

Abstract PhoneFactory {
    Phone makePhone()
    PC makePC()
}

class MiPhoneFactory extends PhoneFactory {
    Phone makePhone()
    PC makePC()
}

class IPhoneFactory extends PhoneFactory {
    Phone makePhone()
    PC makePC()
}


MiPhoneFactory --> MiPhone
MiPhoneFactory --> MiPC

IPhoneFactory --> IPhone
IPhoneFactory --> MAC

mian --> PhoneFactory

@enduml